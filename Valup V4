local Sprinting = game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting
local m = require(Sprinting)
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()
local Version = "1.4.0"
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI/" .. Version))()
local Window = WindUI:CreateWindow({
    Title = "Forsaken Valup V4",
    Icon = "rbxassetid://110295312960615",
    Author = "Peelup And Valvvm",
    Folder = "CloudHub",
    Size = UDim2.fromOffset(580, 460),
    KeySystem = {
        Key = "c00lkidArmy",
        Note = "The Key is in Discord",
        URL = "https://discord.gg/eXraa74t",
        SaveKey = true,
    }, 
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 170,
    HasOutline = true,
})

local Notification = WindUI:Notify({
    Title = "Thx for using the script!",
    Content = "Thx!!",
    Duration = 5,
})
local Tab = Window:Tab({
    Title = "Changer [Humanoid]",
    Icon = "folder",
})
local Section = Tab:Section({ 
    Title = "Humanoid",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})
local Slider = Tab:Slider({
    Title = "Jumper Power",
    Step = 1,
    Value = {
        Min = 50,
        Max = 200,
        Default = 100,
    },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpHeight = value
    end
})
local Slider = Tab:Slider({
    Title = "Field of View",
    Step = 1,
    Value = {
        Min = 70,
        Max = 120,
        Default = 90,
    },
    Callback = function(value)
        game.Workspace.CurrentCamera.FieldOfView = value
    end
})
local Tab = Window:Tab({
    Title = "Main",
    Icon = "folder",
})
local Toggle = Tab:Toggle({
    Title = "Coolkid Aimbot",
    Desc = "Forces mobile aim assist",
    Value = false,
    Callback = function(state)
        game:GetService("ReplicatedStorage").Modules.Network.RemoteEvent:FireServer("SetDevice", state and "Mobile" or "PC")
    end
})

local Toggle = Tab:Toggle({
    Title = "Auto Generator",
    Desc = "Automatically repairs generators",
    Value = false,
    Callback = function(state)
        getgenv().running = state
        while getgenv().running do
            local ingameFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Ingame")
            local mapFolder = ingameFolder and ingameFolder:FindFirstChild("Map")
            if mapFolder then
                for _, g in ipairs(mapFolder:GetChildren()) do
                    if g.Name == "Generator" then
                        g.Remotes.RE:FireServer()
                    end
                end
            end
            task.wait(0.1)
        end
    end
})

local Toggle = Tab:Toggle({
    Title = "Infinite Stamina",
    Desc = "Disables stamina drain",
    Value = false,
    Callback = function(state)
        getgenv().staminaLoop = state
        local Sprinting = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)

        if not state then
            Sprinting.StaminaLossDisabled = nil
            return
        end

        while getgenv().staminaLoop do
            Sprinting.StaminaLossDisabled = function() end
            task.wait(1)
        end
    end
})

local Tab = Window:Tab({
    Title = "ESP",
    Icon = "folder",
})

local Section = Tab:Section({ 
    Title = "ESP System",
    TextXAlignment = "Left",
    TextSize = 17,
})

local Button = Tab:Button({
    Title = "Esp All",
    Desc = "Gens/Killer/Survivors",
    Callback = function()
local Players = game.Workspace.Players
local RunService = game:GetService("RunService")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local killersLabel = Instance.new("TextLabel")
killersLabel.Size = UDim2.new(0, 200, 0, 50)
killersLabel.Position = UDim2.new(0, 10, 0, 10)
killersLabel.BackgroundColor3 = Color3.new(1, 0, 0)
killersLabel.TextColor3 = Color3.new(1, 1, 1)
killersLabel.TextScaled = true
killersLabel.Parent = screenGui

local survivorsLabel = Instance.new("TextLabel")
survivorsLabel.Size = UDim2.new(0, 200, 0, 50)
survivorsLabel.Position = UDim2.new(0, 10, 0, 70)
survivorsLabel.BackgroundColor3 = Color3.new(0, 1, 0)
survivorsLabel.TextColor3 = Color3.new(1, 1, 1) 
survivorsLabel.TextScaled = true
survivorsLabel.Parent = screenGui

local function createOutlineESP(model, outlineColor, fillColor)
    local highlight = Instance.new("Highlight")
    highlight.Parent = model
    highlight.Adornee = model
    highlight.FillTransparency = 0.75
    highlight.FillColor = fillColor
    highlight.OutlineColor = outlineColor
    highlight.OutlineTransparency = 0 
end

local function createOutlineESPForGroup(group, outlineColor, fillColor)
    if group then
        for _, obj in pairs(group:GetChildren()) do
            local humanoid = obj:FindFirstChildOfClass("Humanoid")
            if humanoid and obj:FindFirstChild("HumanoidRootPart") then
                createOutlineESP(obj, outlineColor, fillColor)
            end
        end
    end
end

local function highlightGenerators()
    local generatorsFolder = workspace:FindFirstChild("Map") and 
                             workspace.Map:FindFirstChild("Ingame") and 
                             workspace.Map.Ingame:FindFirstChild("Map")

    if generatorsFolder then
        for _, obj in pairs(generatorsFolder:GetChildren()) do
            if obj:IsA("Model") and obj.Name == "Generator" then
                createOutlineESP(obj, Color3.new(1, 1, 0), Color3.new(1, 1, 0.5))
            end
        end
    end
end

local function updateESP()
    while true do
        -- Clear existing highlights
        for _, obj in pairs(Players:GetChildren()) do
            if obj:IsA("Model") and obj:FindFirstChild("Humanoid") then
                for _, highlight in pairs(obj:GetChildren()) do
                    if highlight:IsA("Highlight") then
                        highlight:Destroy()
                    end
                end
            end
        end

        local killersGroup = Players:FindFirstChild("Killers")
        if killersGroup then
            createOutlineESPForGroup(killersGroup, Color3.new(1, 0, 0), Color3.new(1, 0.5, 0.5))
            killersLabel.Text = "Killers: " .. #killersGroup:GetChildren()
        else
            killersLabel.Text = "Killers: 0"
        end

        local survivorsGroup = Players:FindFirstChild("Survivors")
        if survivorsGroup then
            createOutlineESPForGroup(survivorsGroup, Color3.new(0, 1, 0), Color3.new(0.5, 1, 0.5))
            survivorsLabel.Text = "Survivors: " .. #survivorsGroup:GetChildren()
        else
            survivorsLabel.Text = "Survivors: 0"
        end

        highlightGenerators()

        wait(5) 
    end
end

updateESP()
    end,
})

local Tab = Window:Tab({
    Title = "Other",
    Icon = "folder",
})
local Button = Tab:Button({
    Title = "AntiKick",
    Desc = "Prevents you from being kicked",
    Callback = function()
        local plr = game:GetService("Players").LocalPlayer
        getgenv().Anti = true
        local Anti
        Anti = hookmetamethod(game, "__namecall", function(self, ...)
            if self == plr and getnamecallmethod():lower() == "kick" and getgenv().Anti then
                return warn("[ANTI-KICK] Client Tried To Call Kick Function On LocalPlayer")
            end
            return Anti(self, ...)
        end)
    end,
})

local Button = Tab:Button({
    Title = "Fullbright",
    Desc = "Enables Fullbright",
    Callback = function()
if not _G.FullBrightExecuted then

	_G.FullBrightEnabled = false

	_G.NormalLightingSettings = {
		Brightness = game:GetService("Lighting").Brightness,
		ClockTime = game:GetService("Lighting").ClockTime,
		FogEnd = game:GetService("Lighting").FogEnd,
		GlobalShadows = game:GetService("Lighting").GlobalShadows,
		Ambient = game:GetService("Lighting").Ambient
	}

	game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
		if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
			_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Brightness = 1
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
		if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
			_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").ClockTime = 12
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
		if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
			_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").FogEnd = 786543
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
		if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
			_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").GlobalShadows = false
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
		if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
			_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
		end
	end)

	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 12
	game:GetService("Lighting").FogEnd = 786543
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

	local LatestValue = true
	spawn(function()
		repeat
			wait()
		until _G.FullBrightEnabled
		while wait() do
			if _G.FullBrightEnabled ~= LatestValue then
				if not _G.FullBrightEnabled then
					game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
					game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
					game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
					game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
					game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
				else
					game:GetService("Lighting").Brightness = 1
					game:GetService("Lighting").ClockTime = 12
					game:GetService("Lighting").FogEnd = 786543
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
				end
				LatestValue = not LatestValue
			end
		end
	end)
end

_G.FullBrightExecuted = true
_G.FullBrightEnabled = not _G.FullBrightEnabled
    end,
})
local Tab = Window:Tab({
    Title = "Solo Theme",
    Icon = "folder", -- lucide or rbxassetid
})
local Section = Tab:Section({ 
    Title = "Soon",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})
local Button = Tab:Button({
    Title = "The Stars Burn Out",
    Desc = "Noob Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "Father's promise",
    Desc = "007n7 Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "The Last Paradise",
    Desc = "Two Time Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "Last Life",
    Desc = "Shedelky Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "One Final Guard",
    Desc = "Guest1337 Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "Confronting The luck",
    Desc = "Chance Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "Keeping a Promise",
    Desc = "Elliot Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
local Button = Tab:Button({
    Title = "I will do it for my Friends",
    Desc = "Builderman Solo Theme",
    Callback = function()
game.Players.LocalPlayer:Kick("Soon :(")
    end,
})
